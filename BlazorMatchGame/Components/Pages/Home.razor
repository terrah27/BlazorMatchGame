@rendermode InteractiveServer
@page "/"

<PageTitle>Blazor Match Game</PageTitle>

<style>
    .container {
        width: 400px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="containter">
    <div class="row">
        @foreach (var animal in shuffledAnimals)
        {
            <div class="col-3">
                <button @onclick="@(() => ButtonClick(animal))" type="button" class="btn btn-outline-dark">
                    <h1>@animal</h1>
                </button>
            </div>
        }
    </div>
</div>

@code {
        List<string> animalEmoji = [
        "🐍","🐍",
"🐙","🐙",
"🐠","🐠",
"🦚","🦚",
"🐕‍🦺","🐕‍🦺",
"🦏","🦏",
"🦬","🦬",
"🐓","🐓",
];

        List<string> shuffledAnimals = new List<string>();
protected override void OnInitialized()
    {
        SetUpGame();
    }
    private void SetUpGame()
    {
        shuffledAnimals = animalEmoji.OrderBy(item => Random.Shared.Next()).ToList();
    }

    string lastAnimalFound = string.Empty;

    private void ButtonClick(string animal)
    {
        if (lastAnimalFound == string.Empty)
        {
            // remember which animal clicked - first selection
            lastAnimalFound = animal;
        }
        else if (lastAnimalFound == animal)
        {
            // its a match - reset for next pair
            lastAnimalFound = string.Empty;
            // replace animals with empty buttons
            shuffledAnimals = shuffledAnimals.Select(a => a.Replace(animal, string.Empty)).ToList();
        }
        else
        {
            // selected pair not a match so reset
            lastAnimalFound = string.Empty;
        }
    }
}
